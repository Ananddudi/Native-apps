# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Sec_Big.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtWidgets import * 
from PyQt5.QtGui import * 
from PyQt5.QtCore import * 
from re import *
from loc import Ui_location as form
from confirmation import Ui_confirm as confirm
from Dir_success import Ui_Dirs as direc_tory
import screen_brightness_control as bright1
import requests
import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
import numpy as np
import time
import platform
import subprocess
import os
from PyQt5.QtPrintSupport import *
from googleapiclient.discovery import build
class Ui_MWindow(object):
    x = 0 #for editor's exit function
    def setupUi(self, MWindow):
        MWindow.setObjectName("MWindow")
        MWindow.setWindowModality(Qt.WindowModal)
        MWindow.resize(642, 461)
        sizePolicy = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(MWindow.sizePolicy().hasHeightForWidth())
        MWindow.setSizePolicy(sizePolicy)
        MWindow.setMinimumSize(QSize(642, 461))
        MWindow.setMaximumSize(QSize(642, 461))
        palette = QPalette()
        brush = QBrush(QColor(255, 149, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 149, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        MWindow.setPalette(palette)
        font = QFont()
        font.setFamily("Yrsa SemiBold")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        MWindow.setFont(font)
        icon = QIcon()
        icon.addPixmap(QPixmap("../.designer/backup/Mainicon.jpg"), QIcon.Normal, QIcon.Off)
        MWindow.setWindowIcon(icon)
        MWindow.setWindowOpacity(1.0)
        MWindow.setAutoFillBackground(False)
        MWindow.setStyleSheet("")
        self.centralwidget = QWidget(MWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Stack = QStackedWidget(self.centralwidget)
        self.Stack.setGeometry(QRect(0, 0, 642, 440))
        palette = QPalette()
        brush = QBrush(QColor(255, 124, 126))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 124, 126))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        self.Stack.setPalette(palette)
        font = QFont()
        font.setFamily("Yrsa SemiBold")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.Stack.setFont(font)
        self.Stack.setFocusPolicy(Qt.StrongFocus)
        self.Stack.setStyleSheet("#page4 {background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(66, 54, 185, 255), stop:0.36 rgba(61, 48, 204, 255), stop:0.6 rgba(41, 124, 204, 255), stop:0.75 rgba(12, 165, 255, 255), stop:0.79 rgba(5, 183, 244, 255), stop:0.86 rgba(0, 190, 255, 255), stop:0.935 rgba(55, 200, 239, 255));}")
        self.Stack.setObjectName("Stack")
        self.page1 = QWidget()
        self.page1.setStyleSheet("#page1{background-image: url(:/newPrefix/new.jpg);}")
        self.page1.setObjectName("page1")
        self.profile = QPushButton(self.page1)
        self.profile.setGeometry(QRect(550, 20, 71, 91))
        palette = QPalette()
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(145, 238, 238))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(145, 238, 238))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.profile.setPalette(palette)
        font = QFont()
        font.setFamily("URW Bookman L")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.profile.setFont(font)
        self.profile.setLayoutDirection(Qt.LeftToRight)
        self.profile.setAutoFillBackground(False)
        self.profile.setStyleSheet("#profile:pressed{border-color: red;}""#profile{border-color: rgb(14, 182, 177);border-width : 0.7px;border-style: solid;image: url(:/newPrefix/newimage.jpg) 0 0 0 0 stretch stretch;background-repeat: no-repeat;text-align: top;}")
        self.profile.setObjectName("profile")
        self.profile.setToolTip("<html><body style='color:red'>My information</body></html>")
        self.operating = QPushButton(self.page1)
        self.operating.setGeometry(QRect(520, 120, 101, 71))
        palette = QPalette()
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(144, 241, 241))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(144, 241, 241))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.operating.setPalette(palette)
        font = QFont()
        font.setFamily("URW Bookman L")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.operating.setFont(font)
        self.operating.setStyleSheet("#operating:pressed{border-color: red;}""#operating{border-color: rgb(14, 182, 177);border-width : 0.7px;border-style: solid;text-align: top;image: url(:/newPrefix/os3.jpg) 0 0 0 0 stretch stretch;background-repeat: no-repeat;}")
        self.operating.setObjectName("operating")
        self.operating.setToolTip("<html><body style='color:red'>Operating services</body></html>")
        self.internet = QPushButton(self.page1)
        self.internet.setGeometry(QRect(530, 200, 91, 61))
        palette = QPalette()
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(138, 239, 219))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(138, 239, 219))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.internet.setPalette(palette)
        font = QFont()
        font.setFamily("URW Bookman L")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.internet.setFont(font)
        self.internet.setStyleSheet("#internet:pressed{border-color: red;}""#internet{border-color: rgb(14, 182, 177);image: url(:/newPrefix/internet2.jpg) 0 0 0 0 stretch stretch;border-width : 0.7px;border-style: solid;Text-align: top;background-repeat: no-repeat;}")
        self.internet.setObjectName("internet")
        self.internet.setToolTip("<html><body style='color:red'>Some Internet Features</body></html>")
        self.pushButton = QPushButton(self.page1)
        self.pushButton.setGeometry(QRect(520, 270, 101, 61))
        palette = QPalette()
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(135, 239, 232))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(135, 239, 232))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.pushButton.setPalette(palette)
        font = QFont()
        font.setFamily("URW Bookman L")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("#pushButton:pressed{border-color: red;}""#pushButton{border-color: rgb(14, 182, 177) ;image: url(:/newPrefix/temp.jpg) 2 2 2 2 stretch stretch;border-width : 0.7px;border-style: solid;Text-align: top;background-repeat: no-repeat;}")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setToolTip("<html><body style='color:red'>Show today's temperature as graph</body></html>")
        self.MatW = QWidget(self.page1)
        self.MatW.setGeometry(QRect(10, 290, 471, 141))
        self.MatW.setStyleSheet("#MatW{border-color: rgb(14, 182, 177);border-width : 4px;border-style: solid;background-color: rgb(0, 0, 0);}")
        self.MatW.setObjectName("MatW")
        self.label = QLabel(self.page1)
        self.label.setGeometry(QRect(280, 20, 261, 81))
        palette = QPalette()
        brush = QBrush(QColor(108, 253, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(108, 253, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.label.setPalette(palette)
        font = QFont()
        font.setFamily("URW Bookman L")
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setLayoutDirection(Qt.LeftToRight)
        self.label.setStyleSheet("background-color: rgba(255, 255, 255, 10);\n"
"")
        self.label.setFrameShadow(QFrame.Plain)
        self.label.setTextFormat(Qt.AutoText)
        self.label.setScaledContents(False)
        self.label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.label.setIndent(-1)
        self.label.setObjectName("label")
        self.radio = QRadioButton(self.page1)
        self.radio.setGeometry(QRect(0, 70, 161, 21))
        palette = QPalette()
        brush = QBrush(QColor(30, 144, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(30, 144, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.radio.setPalette(palette)
        font = QFont()
        font.setFamily("Tlwg Mono")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.radio.setFont(font)
        self.radio.setStyleSheet("border-color: rgb(14, 182, 177);\n"
"border-width : 3px;\n"
"border-style: solid;\n"
"border-color: rgb(55, 255, 239);")
        self.radio.setCheckable(True)
        self.radio.setChecked(False)
        self.radio.setObjectName("radio")
        self.slider = QSlider(self.page1)
        self.slider.setGeometry(QRect(0, 90, 160, 16))
        self.slider.setStyleSheet("background-color: rgb(129, 255, 245);")
        self.slider.setOrientation(Qt.Horizontal)
        self.slider.setObjectName("slider")
        self.label_hour = QLabel(self.page1)
        self.label_hour.setGeometry(QRect(0, 0, 61, 61))
        self.label_hour.setMinimumSize(QSize(40, 40))
        palette = QPalette()
        brush = QBrush(QColor(126, 255, 251))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(126, 255, 251))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.label_hour.setPalette(palette)
        font = QFont()
        font.setFamily("URW Gothic [UKWN]")
        font.setPointSize(26)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_hour.setFont(font)
        self.label_hour.setStyleSheet("border: 3px solid DodgerBlue;\n"
"border-radius : 28px;\n"
"background-color: rgba(255, 255, 255, 10);\n"
"")
        self.label_hour.setTextFormat(Qt.RichText)
        self.label_hour.setAlignment(Qt.AlignJustify|Qt.AlignTop)
        self.label_hour.setObjectName("label_hour")
        self.label_minute = QLabel(self.page1)
        self.label_minute.setGeometry(QRect(70, 0, 51, 51))
        self.label_minute.setMinimumSize(QSize(40, 40))
        palette = QPalette()
        brush = QBrush(QColor(121, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(121, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.label_minute.setPalette(palette)
        font = QFont()
        font.setFamily("URW Gothic [UKWN]")
        font.setPointSize(20)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_minute.setFont(font)
        self.label_minute.setStyleSheet("border: 3px solid DodgerBlue;\n"
"border-radius : 21px;\n"
"background-color: rgba(255, 255, 255, 10);\n"
"")
        self.label_minute.setAlignment(Qt.AlignBottom|Qt.AlignLeading|Qt.AlignLeft)
        self.label_minute.setObjectName("label_minute")
        self.label_sec = QLabel(self.page1)
        self.label_sec.setGeometry(QRect(130, 0, 41, 41))
        palette = QPalette()
        brush = QBrush(QColor(116, 255, 244))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(116, 255, 244))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(190, 190, 190))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.label_sec.setPalette(palette)
        font = QFont()
        font.setFamily("URW Gothic [UKWN]")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_sec.setFont(font)
        self.label_sec.setStyleSheet("border: 3px solid DodgerBlue;;\n"
"border-radius : 20px;\n"
"background-color: rgba(255, 255, 255, 10);\n"
"")
        self.label_sec.setAlignment(Qt.AlignBottom|Qt.AlignHCenter)
        self.label_sec.setObjectName("label_sec")
        self.Stack.addWidget(self.page1)
        self.page2 = QWidget()
        self.page2.setStyleSheet("#page2{background-image: url(:/newPrefix/new.jpg);}")
        self.page2.setObjectName("page2")
        self.profileback = QPushButton(self.page2)
        self.profileback.setGeometry(QRect(10, 10, 61, 61))
        font = QFont()
        font.setFamily("P052 [urw]")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.profileback.setFont(font)
        self.profileback.setStyleSheet("\n"
"background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop:0.2 rgba(70, 0, 255, 167), stop:0.3 rgba(0, 80, 255, 92), stop:0.4 rgba(13, 255, 203, 51), stop:0.5 rgba(61, 107, 255, 205), stop:0.52 rgba(90, 76, 255, 205), stop:0.6 rgba(176, 255, 80, 84), stop:1 rgba(73, 245, 255, 0));\n"
"border-color: rgb(14, 182, 177);\n"
"border-width : 0.7px;\n"
"border-style: solid;\n"
"color:aqua;\n"
"border-radius : 27px;")
        self.profileback.setObjectName("profileback")
        self.page2lab = QLabel(self.page2)
        self.page2lab.setGeometry(QRect(340, 10, 291, 421))
        self.page2lab.setStyleSheet("background-color: rgba(255, 255, 255, 10);")
        self.page2lab.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.page2lab.setObjectName("page2lab")
        self.Stack.addWidget(self.page2)
        self.page3 = QWidget()
        self.page3.setStyleSheet("#page3 {background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(66, 54, 185, 255), stop:0.36 rgba(61, 48, 204, 255), stop:0.6 rgba(41, 124, 204, 255), stop:0.75 rgba(12, 165, 255, 255), stop:0.79 rgba(5, 183, 244, 255), stop:0.86 rgba(0, 190, 255, 255), stop:0.935 rgba(55, 200, 239, 255));}")
        self.page3.setObjectName("page3")
        self.osback = QPushButton(self.page3)
        self.osback.setGeometry(QRect(0, 0, 51, 51))
        font = QFont()
        font.setFamily("P052 [urw]")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.osback.setFont(font)
        self.osback.setStyleSheet("\n"
"background-color: qradialgradient(spread:repeat, cx:0.5, cy:0.5, radius:0.077, fx:0.5, fy:0.5, stop:0 rgba(255, 0, 120, 147), stop:0.497326 rgba(0, 0, 0, 147), stop:1 rgba(210, 0, 255, 147));\n"
"border-color: rgb(14, 182, 177);\n"
"border-width : 0.7px;\n"
"border-style: solid;\n"
"color:aqua;\n"
"border-radius : 25px;")
        self.osback.setObjectName("osback")
        self.page3lab = QLabel(self.page3)
        self.page3lab.setGeometry(QRect(60, 0, 581, 51))
        palette = QPalette()
        brush = QBrush(QColor(138, 43, 226))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(120, 255, 246))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(138, 43, 226))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(138, 43, 226))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(120, 255, 246))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(120, 255, 246))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(138, 43, 226, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(138, 43, 226))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(120, 255, 246))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(138, 43, 226))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(138, 43, 226))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(120, 255, 246))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(120, 255, 246))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(138, 43, 226, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(138, 43, 226))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(120, 255, 246))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(138, 43, 226))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(138, 43, 226))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(120, 255, 246))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(120, 255, 246))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(138, 43, 226, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.page3lab.setPalette(palette)
        font = QFont()
        font.setFamily("URW Bookman [urw]")
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)
        self.page3lab.setFont(font)
        self.page3lab.setStyleSheet("color:blueviolet;")
        self.page3lab.setTextFormat(Qt.RichText)
        self.page3lab.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.page3lab.setObjectName("page3lab")
        self.verticalLayoutWidget = QWidget(self.page3)
        self.verticalLayoutWidget.setGeometry(QRect(10, 50, 160, 381))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.Buttonlayout = QVBoxLayout(self.verticalLayoutWidget)
        self.Buttonlayout.setSizeConstraint(QLayout.SetNoConstraint)
        self.Buttonlayout.setContentsMargins(0, 0, 0, 0)
        self.Buttonlayout.setSpacing(1)
        self.Buttonlayout.setObjectName("Buttonlayout")
        self.softwares = QPushButton(self.verticalLayoutWidget)
        palette = QPalette()
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.softwares.setPalette(palette)
        font = QFont()
        font.setFamily("URW Chancery L")
        font.setPointSize(11)
        font.setItalic(True)
        self.softwares.setFont(font)
        self.softwares.setStyleSheet("background-color: rgb(167, 138, 255);\n"
"color:#ff0a4b;\n"
"")
        self.softwares.setObjectName("softwares")
        self.Buttonlayout.addWidget(self.softwares)
        self.comboBox = QComboBox(self.verticalLayoutWidget)
        palette = QPalette()
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.comboBox.setPalette(palette)
        font = QFont()
        font.setFamily("URW Chancery L")
        font.setPointSize(11)
        font.setItalic(True)
        self.comboBox.setFont(font)
        self.comboBox.setStyleSheet("background-color: rgb(167, 138, 255);\n"
"color:#ff0a4b;")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.Buttonlayout.addWidget(self.comboBox)
        self.listremove = QPushButton(self.verticalLayoutWidget)
        palette = QPalette()
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.listremove.setPalette(palette)
        font = QFont()
        font.setFamily("URW Chancery L")
        font.setPointSize(12)
        font.setItalic(True)
        self.listremove.setFont(font)
        self.listremove.setStyleSheet("background-color: rgb(167, 138, 255);\n"
"color:#ff0a4b;\n"
"")
        self.listremove.setObjectName("listremove")
        self.Buttonlayout.addWidget(self.listremove)
        self.terminal = QPushButton(self.verticalLayoutWidget)
        palette = QPalette()
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.terminal.setPalette(palette)
        font = QFont()
        font.setFamily("URW Chancery L")
        font.setPointSize(12)
        font.setItalic(True)
        self.terminal.setFont(font)
        self.terminal.setStyleSheet("background-color: rgb(167, 138, 255);\n"
"color:#ff0a4b;\n"
"\n"
"")
        self.terminal.setObjectName("terminal")
        self.Buttonlayout.addWidget(self.terminal)
        self.executeit = QPushButton(self.verticalLayoutWidget)
        palette = QPalette()
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.executeit.setPalette(palette)
        font = QFont()
        font.setFamily("URW Chancery L")
        font.setPointSize(12)
        font.setItalic(True)
        self.executeit.setFont(font)
        self.executeit.setStyleSheet("background-color: rgb(167, 138, 255);\n"
"color:#ff0a4b;\n"
"")
        self.executeit.setObjectName("executeit")
        self.Buttonlayout.addWidget(self.executeit)
        self.texteditor = QPushButton(self.verticalLayoutWidget)
        palette = QPalette()
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.texteditor.setPalette(palette)
        font = QFont()
        font.setFamily("URW Chancery L")
        font.setPointSize(12)
        font.setItalic(True)
        self.texteditor.setFont(font)
        self.texteditor.setStyleSheet("background-color: rgb(167, 138, 255);\n"
"color:#ff0a4b;\n"
"")
        self.texteditor.setObjectName("texteditor")
        self.Buttonlayout.addWidget(self.texteditor)
        self.switchoff = QPushButton(self.verticalLayoutWidget)
        palette = QPalette()
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(167, 138, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.switchoff.setPalette(palette)
        font = QFont()
        font.setFamily("URW Chancery L")
        font.setPointSize(12)
        font.setItalic(True)
        self.switchoff.setFont(font)
        self.switchoff.setStyleSheet("background-color: rgb(167, 138, 255);\n"
"color:#ff0a4b;\n"
"")
        self.switchoff.setObjectName("switchoff")
        self.Buttonlayout.addWidget(self.switchoff)
        self.showwithList = QLabel(self.page3)
        self.showwithList.setGeometry(QRect(330, 50, 311, 21))
        palette = QPalette()
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(0, 0, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(0, 0, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(0, 0, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.showwithList.setPalette(palette)
        font = QFont()
        font.setFamily("Tlwg Typewriter")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.showwithList.setFont(font)
        self.showwithList.setStyleSheet("background-color:rgba(255, 255, 255, 10);\n"
"color:blue;")
        self.showwithList.setObjectName("showwithList")
        self.Editdir = QLineEdit(self.page3)
        self.Editdir.setGeometry(QRect(330, 380, 311, 51))
        #self.Editdir.setFocusPolicy(Qt.NoFocus)
        self.Editdir.setStyleSheet("color:blue;")
        self.Editdir.setObjectName("Editdir")
        self.list = QListView(self.page3)
        self.list.setGeometry(QRect(330, 70, 311, 301))
        palette = QPalette()
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(0, 0, 0))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(0, 0, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(0, 0, 0))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(0, 0, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(0, 0, 0))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 255, 255, 10))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(0, 0, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.list.setPalette(palette)
        font = QFont()
        font.setFamily("Sarai")
        font.setPointSize(14)
        self.list.setFont(font)
        self.list.setStyleSheet("background-color:rgba(255, 255, 255, 10);\n"
"color:white;")
        self.list.setObjectName("list")
        self.editfile = QLineEdit(self.page3)
        self.editfile.setGeometry(QRect(330, 380, 311, 51))
        self.errorinfo = QLabel()
        self.errorinfo.setGeometry(QRect(10, 10, 441, 51))
        self.errorinfo.setStyleSheet("color:red;")
        self.errorinfo.setText("")
        self.errorinfo.setObjectName("errorinfo")
        palette = QPalette()
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(0, 0, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(0, 0, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(0, 0, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(0, 0, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.editfile.setPalette(palette)
        #self.editfile.setFocusPolicy(Qt.NoFocus)
        self.editfile.setStyleSheet("color:blue;")
        self.editfile.setText("")
        self.editfile.setObjectName("editfile")
        self.command = QLineEdit(self.page3)
        self.command.setGeometry(QRect(330, 70, 300, 71))
        palette = QPalette()
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(170, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(170, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(170, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(170, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(170, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(170, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(170, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(255, 10, 75))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(170, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(170, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(255, 10, 75, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.command.setPalette(palette)
        self.command.setStyleSheet("background-color: rgb(170, 170, 255);\n"
"color:#ff0a4b;")
        self.command.setText("")
        self.command.setObjectName("command")
        #self.verticalScrollBar = QScrollBar(self.page3)
        #self.verticalScrollBar.setGeometry(QRect(620, 70, 20, 301))
        palette = QPalette()
        brush = QBrush(QColor(255, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(255, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(255, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(255, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        #self.verticalScrollBar.setPalette(palette)
        #self.verticalScrollBar.setAutoFillBackground(False)
        #self.verticalScrollBar.setStyleSheet("background-color:#ffaaff;")
        #self.verticalScrollBar.setOrientation(Qt.Vertical)
        #self.verticalScrollBar.setObjectName("verticalScrollBar")
        self.Stack.addWidget(self.page3)
        self.page4 = QWidget()
        self.page4.setObjectName("page4")
        self.internetback = QPushButton(self.page4)
        self.internetback.setGeometry(QRect(0, 0, 51, 51))
        font = QFont()
        font.setFamily("P052 [urw]")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.internetback.setFont(font)
        self.internetback.setStyleSheet("background-color: qradialgradient(spread:repeat, cx:0.5, cy:0.5, radius:0.077, fx:0.5, fy:0.5, stop:0 rgba(255, 0, 120, 147), stop:0.497326 rgba(0, 0, 0, 147), stop:1 rgba(210, 0, 255, 147));\n"
"\n"
"border-color: rgb(14, 182, 177);\n"
"border-width : 0.7px;\n"
"border-style: solid;\n"
"color:aqua;\n"
"border-radius : 25px;")
        self.internetback.setObjectName("internetback")
        self.internet_2 = QLabel(self.page4)
        self.internet_2.setGeometry(QRect(170, 20, 271, 20))
        palette = QPalette()
        brush = QBrush(QColor(128, 70, 170))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(128, 70, 170))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(128, 70, 170))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(128, 70, 170, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(128, 70, 170))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(128, 70, 170))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(128, 70, 170))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(128, 70, 170, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(128, 70, 170))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(128, 70, 170))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(128, 70, 170))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(128, 70, 170, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.internet_2.setPalette(palette)
        font = QFont()
        font.setFamily("KacstOne")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.internet_2.setFont(font)
        self.internet_2.setStyleSheet("color:#8046aa;")
        self.internet_2.setAlignment(Qt.AlignCenter)
        self.internet_2.setObjectName("internet_2")
        self.horizontalLayoutWidget = QWidget(self.page4)
        self.horizontalLayoutWidget.setGeometry(QRect(10, 60, 621, 80))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.youtube = QPushButton(self.horizontalLayoutWidget)
        palette = QPalette()
        brush = QBrush(QColor(218, 255, 33))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(0, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(218, 255, 33))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(218, 255, 33))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(0, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(0, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(218, 255, 33, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(218, 255, 33))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(0, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(218, 255, 33))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(218, 255, 33))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(0, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(0, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(218, 255, 33, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(218, 255, 33))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(0, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(218, 255, 33))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(218, 255, 33))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(0, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(0, 170, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(218, 255, 33, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.youtube.setPalette(palette)
        font = QFont()
        font.setFamily("Serif")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(50)
        self.youtube.setFont(font)
        self.youtube.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"text-decoration: underline;\n"
"font: 12pt \"Serif\";\n"
"color:#daff21;\n"
"")
        self.youtube.setObjectName("youtube")
        self.horizontalLayout.addWidget(self.youtube)
        self.webViewgoogle = QtWebEngineWidgets.QWebEngineView(self.page4)
        self.webViewgoogle.setGeometry(QRect(10, 140, 621, 291))
        self.webViewgoogle.setObjectName("webViewgoogle")
        self.Stack.addWidget(self.page4)
        self.page5youtube = QWidget()
        self.page5youtube.setStyleSheet("#page5youtube{background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(66, 54, 185, 255), stop:0.36 rgba(61, 48, 204, 255), stop:0.6 rgba(41, 124, 204, 255), stop:0.75 rgba(12, 165, 255, 255), stop:0.79 rgba(5, 183, 244, 255), stop:0.86 rgba(0, 190, 255, 255), stop:0.935 rgba(55, 200, 239, 255));}")
        self.page5youtube.setObjectName("page5youtube")
        self.youtubeback = QPushButton(self.page5youtube)
        self.youtubeback.setGeometry(QRect(290, 0, 61, 61))
        font = QFont()
        font.setFamily("P052 [urw]")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.youtubeback.setFont(font)
        self.youtubeback.setStyleSheet("background-color: qradialgradient(spread:repeat, cx:0.5, cy:0.5, radius:0.077, fx:0.5, fy:0.5, stop:0 rgba(255, 0, 120, 147), stop:0.497326 rgba(0, 0, 0, 147), stop:1 rgba(210, 0, 255, 147));\n"
"border-color: rgb(14, 182, 177);\n"
"border-width : 0.7px;\n"
"border-style: solid;\n"
"color:aqua;\n"
"border-radius : 26px;")
        self.youtubeback.setObjectName("youtubeback")
        self.trendbutton = QPushButton(self.page5youtube)
        self.trendbutton.setGeometry(QRect(0, 40, 191, 41))
        palette = QPalette()
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(0, 255, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(0, 255, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(0, 255, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.trendbutton.setPalette(palette)
        font = QFont()
        font.setFamily("Tibetan Machine Uni")
        font.setPointSize(12)
        self.trendbutton.setFont(font)
        self.trendbutton.setStyleSheet("#trendbutton:pressed{border-color: white;}""#trendbutton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0.0890052 rgba(164, 62, 170, 255), stop:0.717277 rgba(206, 77, 107, 254));color:aqua;border-top-left-radius: 20px;border-top-right-radius: 20px;}")
        self.trendbutton.setCheckable(False)
        self.trendbutton.setChecked(False)
        self.trendbutton.setObjectName("trendbutton")
        palette = QPalette()
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(0, 255, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(0, 255, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(0, 255, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.searchbutton = QPushButton(self.page5youtube)
        self.searchbutton.setGeometry(QRect(423, 85, 181, 41))
        palette = QPalette()
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(0, 255, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(0, 255, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(0, 255, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        gradient = QLinearGradient(0.0, 0.0, 1.0, 0.0)
        gradient.setSpread(QGradient.PadSpread)
        gradient.setCoordinateMode(QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.0890052, QColor(164, 62, 170))
        gradient.setColorAt(0.717277, QColor(206, 77, 107, 254))
        brush = QBrush(gradient)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(0, 255, 255, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.searchbutton.setPalette(palette)
        font = QFont()
        font.setFamily("Tibetan Machine Uni")
        font.setPointSize(9)
        self.searchbutton.setFont(font)
        self.searchbutton.setStyleSheet("#searchbutton:pressed{border-color: red;}""#searchbutton{background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0.0890052 rgba(164, 62, 170, 255), stop:0.717277 rgba(206, 77, 107, 254));color:aqua;border-top-left-radius: 20px;border-top-right-radius: 20px;border-bottom-left-radius: 20px;border-bottom-right-radius: 20px;}")
        self.searchbutton.setCheckable(False)
        self.searchbutton.setChecked(False)
        self.searchbutton.setObjectName("searchbutton")
        self.searchchannel = QLineEdit(self.page5youtube)
        self.searchchannel.setGeometry(QRect(400, 40, 231, 41))
        self.searchchannel.setStyleSheet("background-color: rgb(255, 252, 149);\n"
"border-top-left-radius: 20px;\n"
"border-top-right-radius: 20px;\n"
"border-bottom-left-radius: 20px;\n"
"border-bottom-right-radius: 20px;")
        self.searchchannel.setObjectName("searchchannel")
        self.trendlist = QListView(self.page5youtube)
        self.trendlist.setGeometry(QRect(0, 90, 351, 341))
        palette = QPalette()
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(55, 200, 239))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Button, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(55, 200, 239))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Base, brush)
        brush = QBrush(QColor(55, 200, 239))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        brush = QBrush(QColor(255, 0, 0, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(55, 200, 239))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Button, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(55, 200, 239))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Base, brush)
        brush = QBrush(QColor(55, 200, 239))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        brush = QBrush(QColor(255, 0, 0, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(55, 200, 239))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Button, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(55, 200, 239))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        brush = QBrush(QColor(55, 200, 239))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        brush = QBrush(QColor(255, 0, 0, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.trendlist.setPalette(palette)
        self.trendlist.setStyleSheet("background-color:#37c8ef;\n"
"color:red;\n"
"border-top-left-radius: 20px;\n"
"border-top-right-radius: 20px;\n"
"padding-top: 10x;\n"
"padding-left:10px")
        self.trendlist.setItemAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.trendlist.setObjectName("trendlist")
        self.channelinfo = QLabel(self.page5youtube)
        self.channelinfo.setGeometry(QRect(410, 130, 211, 291))
        self.channelinfo.setStyleSheet("color:red;")
        self.channelinfo.setObjectName("channelinfo")
        self.channelinfo.setTextFormat(Qt.RichText)
        self.label_3 = QLabel(self.page5youtube)
        self.label_3.setGeometry(QRect(400, 20, 221, 20))
        palette = QPalette()
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Text, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 0, 0, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Active, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.Text, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Inactive, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 0, 0, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.WindowText, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.Text, brush)
        brush = QBrush(QColor(255, 0, 0))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Disabled, QPalette.ButtonText, brush)
        brush = QBrush(QColor(255, 0, 0, 128))
        brush.setStyle(Qt.NoBrush)
        palette.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush)
        self.label_3.setPalette(palette)
        font = QFont()
        font.setFamily("Tlwg Typist")
        font.setPointSize(11)
        font.setItalic(True)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color:red;")
        self.label_3.setAlignment(Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.Stack.addWidget(self.page5youtube)
        MWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QStatusBar(MWindow)
        font = QFont()
        font.setFamily("Z003 [UKWN]")
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)
        self.statusbar.setFont(font)
        self.statusbar.setCursor(QCursor(Qt.ForbiddenCursor))
        self.statusbar.setStatusTip("")
        self.statusbar.setObjectName("statusbar")
        MWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MWindow)
        self.Stack.setCurrentIndex(0)
        QMetaObject.connectSlotsByName(MWindow)

        self.timer = QTimer()
        self.timer.timeout.connect(self.showTime)
        self.timer.start(1000)


        self.slider.setVisible(False)
        self.errorinfo.setVisible(False)
        self.editfile.setVisible(False)
        self.Editdir.setVisible(False)


        self.fig = plt.figure()
        self.canv = FigureCanvas(self.fig)

        self.layout = QVBoxLayout()
        self.layout.addWidget(self.canv)
        self.MatW.setLayout(self.layout)

        self.layout.addWidget(self.errorinfo)

        self.ls = ""
        self.for_profile = ""

        self.model = QStandardItemModel()
        self.list.setModel(self.model)



        

    def retranslateUi(self, MWindow):
        _translate = QCoreApplication.translate
        MWindow.setWindowTitle(_translate("MWindow", "Controls"))
        self.profile.setText(_translate("MWindow", "Anand dudi"))
        self.operating.setText(_translate("MWindow", "Operating System"))
        self.internet.setText(_translate("MWindow", "The Internet"))
        self.pushButton.setText(_translate("MWindow", "Temp Graph"))
        self.label.setText(_translate("MWindow", "<html><head/><body><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Profile will show my info</li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Temp will show temperature</li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Internet will provide some services</li></ul><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Operating system will control over OS</li></ul></body></html>"))
        self.radio.setText(_translate("MWindow", "Brightness"))
        self.label_hour.setText(_translate("MWindow", "12"))
        self.internetback.setText(_translate("MWindow", "Back"))
        self.label_minute.setText(_translate("MWindow", ""))
        self.label_sec.setText(_translate("MWindow", ""))
        self.page2lab.setText(_translate("MWindow", ""))
        self.osback.setText(_translate("MWindow", "Back"))
        self.page3lab.setText(_translate("MWindow", ""))
        self.softwares.setText(_translate("MWindow", "Software Installed"))
        self.comboBox.setItemText(0, _translate("MWindow", "File management"))
        self.comboBox.setItemText(1, _translate("MWindow", "Create file"))
        self.comboBox.setItemText(2, _translate("MWindow", "Remove file"))
        self.comboBox.setItemText(3, _translate("MWindow", "Access file"))
        self.profileback.setText(_translate("MWindow", "Back"))
        self.listremove.setText(_translate("MWindow", "Remove List"))
        self.youtubeback.setText(_translate("MWindow", "Back"))
        self.terminal.setText(_translate("MWindow", "Working with terminal"))
        self.executeit.setText(_translate("MWindow", "Execute List item"))
        self.texteditor.setText(_translate("MWindow", "Text editing"))
        self.switchoff.setText(_translate("MWindow", "Switch off"))
        self.showwithList.setText(_translate("MWindow", "Software List"))
        self.Editdir.setPlaceholderText(_translate("MWindow", "Type the directory in which you want to create file"))
        self.editfile.setPlaceholderText(_translate("MWindow", "Type the file name"))
        self.command.setPlaceholderText(_translate("MWindow", "Type the command you want to execute on terminal"))
        self.internet_2.setText(_translate("MWindow", "The Internet"))
        self.youtube.setText(_translate("MWindow", "Need Youtube services?"))
        self.trendbutton.setText(_translate("MWindow", "Get trending videos"))
        self.searchbutton.setText(_translate("MWindow", "search"))
        self.searchchannel.setPlaceholderText(_translate("MWindow", "    Type the channel name "))
        self.channelinfo.setText(_translate("MWindow", ""))
        self.label_3.setText(_translate("MWindow", "Channels information"))
       

        self.radio.setChecked(False)
        self.radio.toggled.connect(lambda:self.changeState(self.radio))



        self.profile.clicked.connect(lambda:self.Stack.setCurrentIndex(1))
        self.profile.clicked.connect(self.typingspeed)
        self.operating.clicked.connect(lambda:self.Stack.setCurrentIndex(2))
        self.internet.clicked.connect(lambda:self.Stack.setCurrentIndex(3))
        self.youtube.clicked.connect(lambda:self.Stack.setCurrentIndex(4))
        self.pushButton.clicked.connect(self.showGraph)

        #back buttons
        self.osback.clicked.connect(lambda:self.Stack.setCurrentIndex(0))
        self.internetback.clicked.connect(lambda:self.Stack.setCurrentIndex(0))
        self.youtubeback.clicked.connect(lambda:self.Stack.setCurrentIndex(3))
        self.profileback.clicked.connect(lambda:self.Stack.setCurrentIndex(0))

        #for operating systerm:-
        self.page3lab.setVisible(True)
        os_is = platform.system()
        user_name = platform.node()
        machine_is = platform.machine()

        self.page3lab.setText("<html><body style='color:green'><h4 style='color:red;margin-bottom: 0em;'>Your Operating system is</h4><br/>"+os_is+" AND USERNAME: "+user_name+" ,MACHINE SPECIFICATION: "+machine_is+"</body></html>")
        self.command.setVisible(False)
        self.comboBox.currentIndexChanged.connect(self.combofunc)
        self.terminal.clicked.connect(self.terminal_work)
        self.texteditor.clicked.connect(self.text_edit)
        self.switchoff.clicked.connect(self.switchoffcom)
        self.executeit.clicked.connect(self.executecommand)
         
         ##software installed
        self.softwares.clicked.connect(self.showbox_soft)
        self.listremove.clicked.connect(self.listremoves)
        
        #internet browser
        self.internet.clicked.connect(self.loaderror)

        #youtube
        self.trendbutton.clicked.connect(self.youtubetrend)
        self.searchbutton.clicked.connect(self.channelsearchfunc)
        self.searchchannel.returnPressed.connect(self.channelsearchfunc)


    #youtube functions
    def channelsearchfunc(self):
        text = self.searchchannel.text()
        if text != '':
            try:
                api_key = "{here should paste your api key}"

                req_service = build('youtube','v3',developerKey=api_key)

                srch_result = req_service.search().list(

                    part = 'snippet',
                    q = text,
                    type = 'channel'

                    )
                exc = srch_result.execute()
                ls = exc['items'][0]
                publish_date = ls['snippet']['publishedAt']
                channel_id = ls['id']['channelId']
                chn_data = req_service.channels().list(

                    part = 'statistics',
                    id = channel_id

                    )   
                channel_data = chn_data.execute()
                ls_item = channel_data['items'][0]
                stats = ls_item['statistics']

                num_ofViews = stats['viewCount']

                videos = stats['videoCount']
                
                push_date = publish_date.split('T')
                publish_dates = push_date[0]
                
                pub_time = push_date[1]
                pub_time = pub_time[:-1] 

                subscriber = stats['subscriberCount']
                


            except Exception as e:
                subscriber = 'None'
                self.dialog_critical("Channel owner hid the Subscriber Features")

            finally:
                self.channelinfo.clear()

                self.channelinfo.setText("<html><body><h4 style='color:#f5ff94'>Channel starts date:</h4>"+publish_dates+"\n<h4 style='color:#f5ff94'>Time:</h4>"+pub_time+"\n<h4 style='color:#f5ff94'>Total Views:</h4>"+num_ofViews+"\n<h4 style='color:#f5ff94'>Total Subscriber:</h4>"+subscriber+"\n<h4 style='color:#f5ff94'>Total Videos:</h4>"+videos+"</body></html>")




    def youtubetrend(self):
        
        self.dialog_critical("Only top 10 videos will be show in real time")

        Myapi_key = "{here you have to paste your api key in order to execute in your machine}"
        service = build('youtube','v3',developerKey=Myapi_key)
        channel_name = service.videos().list(
            part = "snippet",
            chart = 'mostPopular',
            maxResults = 10
        )
        nams = channel_name.execute()
        self.trendlist.setModel(self.model)
        for names in nams['items']:
            fetch_name = names['snippet']['title']
            item1 = QStandardItem(fetch_name)
            self.model.appendRow(item1)            



    def typingspeed(self):
        self.prof = QTimer()
        pro_text = "<html><head/><body><p><span style=\" font-family:\'Courier New\'; font-size:20px; font-weight:600; font-style:italic; color:#ff0000;\">Hi<br/> I am ANAND DUDI</span></p><p><span style=\" font-family:\'Verdana\'; font-size:15px; font-weight:600; color:#1e90ff;\">Here are few things i want <br/>to tell you :-</span></p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" color:aqua;margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">i love developing Software and this..<br/> is my second step after completing <br/>Calculator</li><li style=\"color:aqua; margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Algorithm used here are..<br/> developed by me </li><li style=\"color:aqua; margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If you like to connect on <br/>Instagram - dudi_ai_</li><li style=\" color:aqua;margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Twitter - @anand_dudi</li><li style=\" color:aqua;margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">LinkedIn - <a href=\"https://www.linkedin.com/in/anand-dudi-b47443202/\"><span style=\" text-decoration: underline; color:Violet;\">Anand DUDI</span></a></li></ul><p><a href=\"https://www.linkedin.com/in/anand-dudi-b47443202/\"><span style=\" text-decoration: underline; color:Tomato;\">In future I want to explore ...</span></a></p><p><a href=\"https://www.linkedin.com/in/anand-dudi-b47443202/\"><span style=\" text-decoration: underline; color:Tomato;\"><b><i>Artificial Intelligence</i></b><br/><br/> Credit :- <br/> ANAND DUDI</span></a></p></body></html>"
        tx_pro = iter(pro_text)
        self.prof.timeout.connect(lambda:self.typingfor_profile(next(tx_pro),pro_text))
        self.prof.start(17)

    def typingfor_profile(self,gettxt,equl):
        self.for_profile += gettxt
        self.page2lab.setText(self.for_profile)
        if self.for_profile == equl:
            self.prof.stop()

    def showTime(self):
        currtime = QTime.currentTime()

        time_t = currtime.toString("h:mm:ss ap") # did for hour in  12 hour format
        spli = time_t.split(':')
        hour_value = spli[0]
        seconds_time = str(currtime.second())
        minute_time = str(currtime.minute())
        self.label_hour.setText(hour_value)

        self.label_minute.setText(minute_time)
        self.label_sec.setText(seconds_time)

    def changeState(self,buttonforchange):
        if buttonforchange.isChecked() == False:
            self.slider.setVisible(False)
        else:
            self.slider.setVisible(True)
            self.slider.valueChanged.connect(self.valuechange)

    def valuechange(self):
        getV = self.slider.value()
        bright1.set_brightness(getV,force=False)

    def showGraph(self):
        dialogbox = QDialog()
        dialogbox.setModal(True)
        dialogbox_ui = form()
        dialogbox_ui.setupUi(dialogbox)
        dialogbox.exec_()
        dialogbox.show()
        locationn = dialogbox_ui.getValues()
        try:
            reg_key = "fd5e6005c01e826e2b2ac8fce8689249"
            api_link = "https://api.openweathermap.org/data/2.5/weather?q="+locationn+"&appid="+reg_key
            req = requests.get(api_link)
            conv_j = req.json()
            
            if conv_j['cod'] == '404':
                self.errorinfo.setVisible(True)
                self.typing = QTimer()
                txts = "required correct city"
                valfors = iter(txts)
                self.typing.timeout.connect(lambda:self.typingtext(next(valfors)))
                self.typing.start(100)

            else:
                self.errorinfo.setVisible(False)
                self.tem_min = ((conv_j["main"]["temp_min"]) - 273.15)
                self.tempr = ((conv_j["main"]["temp"]) - 273.15)
                self.tem_max = ((conv_j["main"]["temp_max"]) - 273.15)
                self.tm = QTimer()
                self.tm.timeout.connect(self.showtimes)
                self.tm.start(1000)
        except:
            self.errorinfo.setVisible(True)
            self.errorinfo.setText("Internet connection problem")            

    def typingtext(self,printnxt):
        self.ls += printnxt
        self.errorinfo.setText(self.ls)
        if self.ls == "required correct city":
            self.typing.stop()

    def showtimes(self):
        
        data = np.array([self.tem_min,self.tempr,self.tem_max])
        plt.plot(data)
        self.canv.draw()

    #os functions
    def dialog_critical(self, s):
  
        dlg = QMessageBox(self.page3)
  
        dlg.setText(s)
        dlg.setIcon(QMessageBox.Critical)
  
        dlg.show()

    def executecommand(self):
        self.command.setVisible(True)
        self.command.setPlaceholderText("Type the application you want execute in list")
        self.command.returnPressed.connect(self.executelist)

    def executelist(self):
        text = self.command.text()
        os.system(text)
        self.command.setVisible(False)


    def switchoffcom(self):
        if platform.system() == 'Linux':
            self.dialog_critical("It will shutdown your computer immediately")
            os.system('sudo shutdown -P now')
        elif platform.system() == 'Windows':
            self.dialog_critical("It will shutdown your computer immediately")
            os.system('shutdown /s')
            
    def def functionFor_editor(self):
        self.layout2 = QVBoxLayout()
        self.page3.setLayout(self.layout2)

    def text_edit(self):
        editor_plain = QPlainTextEdit()
        font_size = QFontDatabase.systemFont(QFontDatabase.FixedFont)
        font_size.setPointSize(12)
        if self.x != 1:
            self.functionFor_editor()
        editor_plain.setFont(font_size)
        self.layout2.addWidget(editor_plain)

        
        menu_bar = QMenuBar()
        self.layout2.setMenuBar(menu_bar)
                
        menu_bar.setObjectName("menu_bar")
        addaction = menu_bar.addMenu("File")

        openfile = QAction("Open file",self.layout2)
        addaction.addAction(openfile)
        openfile.triggered.connect(lambda:self.openfiles(editor_plain))

        save = QAction("Save",self.layout2)
        addaction.addAction(save)
        save.triggered.connect(lambda:self.savefile(editor_plain,self.page3))

        exit = QAction("Exit",self.layout2)
        addaction.addAction(exit)
        exit.triggered.connect(lambda:self.exitfun(editor_plain,menu_bar))
        
    def exitfun(self,lay,exitmenu):
        lay.setParent(None)
        exitmenu.setParent(None) 
        self.x = 1

    def savefile(self,editor,lay):
        path, _ = QFileDialog.getSaveFileName(lay, "Save file", "", 
                             "Text documents (*.txt);All files (*.*)")
        if not path:
            return
        else:
            text = editor.toPlainText()
            try:
                fwrite = open(path,'w')
                fwrite.write(text)
            except Exception as e:
                self.dialog_critical(str(e))


    def openfiles(self,edi):
        path, _ = QFileDialog.getOpenFileName(self, "Open file", "", 
                             "Text documents (*.txt);All files (*.*)")
        if path:
            try:
                f = open(path,'rU')
                text = f.read()
            except:
                self.dialog_critical("Can't open")

            else:
                edi.setPlainText(text)


    def terminal_work(self):
        if platform.system() == 'Linux':
            self.list.setVisible(False)
            self.command.setVisible(True)
            self.command.returnPressed.connect(self.commandfunc)
        elif platform.system() == 'Windows':
            self.dialog_critical("It will only open terminal unlike linux have execute power from here")
            os.system('wt.exe')
    def commandfunc(self):
        gettext = self.command.text()
        liscon = list(gettext.split(" "))
        try:
            gettxt = subprocess.Popen(liscon,stdout = subprocess.PIPE)
            commut = gettxt.communicate()
            lists = list(commut)
            strs = ' '.join([str(e) for e in lists])
            splitstr = strs.split('\n')
            splitstr = splitstr[0].split('\\')
            self.command.setVisible(False)
            self.list.setVisible(True)
            splitstr = [e[1:] for e in splitstr]
            for i in splitstr:
                item1 = QStandardItem(i)
                self.model.appendRow(item1)
        except:
            self.dialog_critical("Enter valid command")


    def combofunc(self):
            self.editfile.setVisible(True)
            self.editfile.returnPressed.connect(self.filefunc)

    def filefunc(self):
        txt = self.editfile.text()
        prs_txt = re.findall("[a-z0-9A-Z]*\.txt$",txt)
        if self.comboBox.currentText() == 'Create file':
            if prs_txt:
                self.editfile.setVisible(False)
                self.Editdir.setVisible(True)
                self.Editdir.returnPressed.connect(lambda:self.onDir(txt))
        elif self.comboBox.currentText() == 'Remove file':
            if prs_txt:
                self.editfile.setVisible(False)
                self.Editdir.setVisible(True)
                self.Editdir.returnPressed.connect(lambda:self.removefuncs(txt))
        elif self.comboBox.currentText() == 'Access file':
              if prs_txt:
                self.editfile.setVisible(False)
                self.Editdir.setVisible(True)
                self.Editdir.returnPressed.connect(lambda:self.accessfile(txt))

    def accessfile(self,files):
        dirtxt = self.Editdir.text()
        right_dir = re.findall("[/]+",dirtxt)
        dir_path = "./home/"
        os_dir = dir_path+dirtxt
        if right_dir:
            if os.path.exists(os_dir):
                try:
                    execute_command = 'cd '+os_dir+'| gedit '+files
                    os.system(execute_command)
                except:
                    dialogfor_file = QDialog()
                    dir_create = direc_tory()
                    dir_create.setupUi(dialogfor_file)
                    var = dir_create.provideLoc()
                    fil = files[:-4]
                    var.setText("Issue occur in "+fil)
                    self.Editdir.clear()
                    dialogfor_file.exec_()
                    dialogfor_file.show()
            else:
                dialogfor_file = QDialog()
                dir_create = direc_tory()
                dir_create.setupUi(dialogfor_file)
                var = dir_create.provideLoc()
                var.setText("The Path you have entered does not exist")
                self.Editdir.clear()
                dialogfor_file.exec_()
                dialogfor_file.show()

    def removefuncs(self,files):
        dirtxt = self.Editdir.text()
        right_dir = re.findall("[/]+",dirtxt)
        dir_path = "./home/"
        os_dir = dir_path+dirtxt
        if right_dir:
            if os.path.exists(os_dir):
                try:
                    path_file = os.path.join(os_dir,files)
                    os.remove(path_file)
                    dialogfor_file = QDialog()
                    dir_create = direc_tory()
                    dir_create.setupUi(dialogfor_file)
                    var = dir_create.provideLoc()
                    f_fil = files[:-4]
                    var.setText("File "+f_fil+" is deleted")
                except:
                    dialogfor_file = QDialog()
                    dir_create = direc_tory()
                    dir_create.setupUi(dialogfor_file)
                    var = dir_create.provideLoc()
                    var.setText("Some Issue occur while deleting file "+files)
                finally:
                    self.Editdir.clear()
                    dialogfor_file.exec_()
                    dialogfor_file.show()
                    self.Editdir.setVisible(False)
            else:
                dialogfor_file = QDialog()
                dir_create = direc_tory()
                dir_create.setupUi(dialogfor_file)
                var = dir_create.provideLoc()
                var.setText("The Path you have entered does not exist")
                self.Editdir.clear()
                dialogfor_file.exec_()
                dialogfor_file.show()




    def onDir(self,files):
        dirtxt = self.Editdir.text()
        right_dir = re.findall("[/]+",dirtxt)
        if right_dir:
            try:
                dir_path = "./home/"
                succ = "File is Successfully created in Current directories "
                final_path = succ+dir_path+dirtxt
                os_dir = dir_path+dirtxt
                os.makedirs(os_dir)
                path_name = os.path.join(os_dir,files)
                open(path_name,"x")
                dialogfor_file = QDialog()
                dir_create = direc_tory()
                dir_create.setupUi(dialogfor_file)
                var = dir_create.provideLoc()
                var.setText(final_path)
            except:
                dialogfor_file = QDialog()
                dir_create = direc_tory()
                dir_create.setupUi(dialogfor_file)
                var = dir_create.provideLoc()
                var.setText("Failed to create file in given directory cause file or dir already exist")
            finally:
                self.Editdir.clear()
                dialogfor_file.exec_()
                dialogfor_file.show()    
                self.Editdir.setVisible(False)
            
            


    def listremoves(self):
        self.model.clear()

    def showbox_soft(self):
        dilog_confirm = QDialog()
        fetch_conf = confirm()
        fetch_conf.setupUi(dilog_confirm)
        dilog_confirm.exec_()
        dilog_confirm.show()


        system_of = platform.system()

        if system_of == 'Linux':

            data = subprocess.Popen(['ls','/usr/share/applications','|','awk','-F','".desktop"','"{ print $1}"','-'], stdout = subprocess.PIPE)
            get_data = data.communicate()
            getin_list = list(get_data)
            st = ' '.join([str(elem) for elem in getin_list])
            st = st.split('\n')
            strin = st[0].split('\\')
            last_ls = strin[1:(len(strin)-1)]
            ls_ls = [e[1:] for e in last_ls]
            ls_char = [m[:-8] for m in ls_ls]
            for items in ls_char:
                item1 = QStandardItem(items)
                self.model.appendRow(item1)
            
        elif system_of == 'Windows':
            data_win = subprocess.Popen(['/output:C:\list.txt','product get name','version'], stdout = subprocess.PIPE)
            get_data1 = data.communicate()
            # i am not windows user so i am leaving it now for later


    #internet functions
    def loaderror(self):
        t = self.webViewgoogle.setUrl(QUrl("https://www.google.com"))
        self.webViewgoogle.loadFinished.connect(lambda x:self.loadfunc(x))

    def loadfunc(self,boolvalue):
        if not boolvalue:
            self.dialog_critical("Dudi's advice:Please connect to internet in order to use browser")

          


    


from PyQt5 import QtWebEngineWidgets
import button2_rc
import button_rc
import getit_rc
import internet_rc
import temp_rc


if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    MWindow = QMainWindow()
    ui = Ui_MWindow()
    ui.setupUi(MWindow)
    MWindow.show()
    sys.exit(app.exec_())
